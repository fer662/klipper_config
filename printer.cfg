[include mainsail.cfg]
[include toolhead_btt_ebbcan_G0B1_v1.2.cfg]
[include nozzle_scrub.cfg]
[include KAMP_Settings.cfg]
[include K-ShakeTune/*.cfg]

[respond]
default_type: echo
default_prefix:

[virtual_sdcard]
path: ~/printer_data/gcodes

[mcu]
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_3E0016001550335331383520-if00
##--------------------------------------------------------------------

[mcu z]
##	MCU for Z steppers
##	[Z in X] - Front Left
##	[Z1 in Y] - Rear Left
##	[Z2 in Z] - Rear Right
##	[Z3 in E0]- Front Right
##	Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1769_0CE0000DA29869AF5BE23F5EC22000F5-if00
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 800
max_accel: 10000    			#Max 4000
max_z_velocity: 20 			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 20.0

[exclude_object]

[input_shaper]
shaper_freq_x:72
shaper_type_x:mzv
shaper_freq_y:70.6
shaper_type_y:mzv

#[autotune_tmc stepper_x]
#motor: ldo-42sth48-2504ah
#sgt: 2
#voltage: 48
#pwm_freq_target: 40000

#[autotune_tmc stepper_y]
#motor: ldo-42sth48-2504ah
#sgt: 1
#voltage: 48
#pwm_freq_target: 40000

#[autotune_tmc stepper_x1]
#motor: ldo-42sth48-2504ah
#sgt: 2
#voltage: 48
#pwm_freq_target: 40000

#[autotune_tmc stepper_y1]
#motor: ldo-42sth48-2504ah
#sgt: 1
#voltage: 48
#pwm_freq_target: 40000


#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X on mcu_xye (B Motor)
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
#endstop_pin: can0:LIMIT_3
endstop_pin: tmc5160_stepper_x:virtual_endstop
position_min: 0
##--------------------------------------------------------------------

##	Uncomment below for 250mm build
position_endstop: 345
position_max: 345

##--------------------------------------------------------------------
homing_speed: 100   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc5160 stepper_x]
cs_pin: PC4
spi_bus: spi1
diag1_pin: ^!PG6
interpolate: false
run_current: 2.2
sense_resistor: 0.075
stealthchop_threshold: 0
driver_SGT: 2

[stepper_x1]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200
endstop_pin: tmc5160_stepper_x:virtual_endstop

[tmc5160 stepper_x1]
cs_pin: PC6
spi_bus: spi1
diag1_pin: ^!PG10
interpolate: false
run_current: 2.2
sense_resistor: 0.075
stealthchop_threshold: 0
driver_SGT: 2

[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200
endstop_pin: tmc5160_stepper_y:virtual_endstop
position_min: 0
#	Uncomment for 350mm build
position_endstop: 353
position_max: 353

##--------------------------------------------------------------------
homing_speed: 100
homing_retract_dist: 0
homing_positive_dir: true

[tmc5160 stepper_y]
cs_pin: PD11
spi_bus: spi1
diag1_pin: ^!PG9
interpolate: false
run_current: 2.2
sense_resistor: 0.075
stealthchop_threshold: 0
driver_SGT: 1

[stepper_y1]
step_pin: PG4
dir_pin: PC1
enable_pin: !PA0
rotation_distance: 40
microsteps: 16
full_steps_per_rotation:200
endstop_pin: tmc5160_stepper_y:virtual_endstop

[tmc5160 stepper_y1]
cs_pin: PC7
spi_bus: spi1
diag1_pin: ^!PG11
interpolate: false
run_current: 2.2
sense_resistor: 0.075
stealthchop_threshold: 0
driver_SGT: 1

#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: z:P2.6
enable_pin: !z:P2.1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 8
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##	Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config

##--------------------------------------------------------------------
##	Uncomment below for 350mm build
position_max: 350

##--------------------------------------------------------------------
position_min: -5
homing_speed: 12
second_homing_speed: 3
homing_retract_dist: 0

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:P1.10
interpolate: true
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: !z:P0.20
enable_pin: !z:P2.8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 8

[tmc2209 stepper_z1]
uart_pin: z:P1.9
interpolate: true
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: z:P2.11
enable_pin: !z:P0.21
rotation_distance: 40
gear_ratio: 80:16
microsteps: 8

[tmc2209 stepper_z2]
uart_pin: z:P1.8
interpolate: true
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0

##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: !z:P0.11
enable_pin: !z:P2.12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 8

[tmc2209 stepper_z3]
uart_pin: z:P1.4
interpolate: true
run_current: 0.9
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
# 	Extruder
#####################################################################

#	E0 on MCU X/Y
[extruder]
max_extrude_cross_section: 200
max_extrude_only_distance: 1000
step_pin: can0:EXT_STEP
dir_pin: !can0:EXT_DIR
enable_pin: !can0:EXT_EN
##	Update value below when you perform extruder calibration
##	If you ask for 100mm of filament, but in reality it is 98mm:
##	rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
#rotation_distance: 22.6789511	#Bondtech 5mm Drive Gears
#rotation_distance: 22.2276399741 #test1
rotation_distance: 22.837
##	Update Gear Ratio depending on your Extruder Type
##	Use 50:17 for Afterburner/Clockwork (BMG Gear Ratio)
##	Use 80:20 for M4, M3.1
gear_ratio: 50:10				#BMG Gear Ratio
microsteps: 16
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
heater_pin: can0:HE0
##	Validate the following thermistor type to make sure it is correct
sensor_type: ATC Semitec 104NT-4-R025H42G
## ATC Semitec 104GT-2
sensor_pin: can0:TH0
min_temp: 10
max_temp: 300
max_power: 1.0
min_extrude_temp: 20
#control = pid
#pid_kp = 26.213
#pid_ki = 1.304
#pid_kd = 131.721
##	Try to keep pressure_advance below 1.0
pressure_advance: 0.035
#pressure_advance: 0.06
##	Default is 0.040, leave stock
pressure_advance_smooth_time: 0.040

##	E0 on MCU X/Y
[tmc2209 extruder]
uart_pin: can0:EXT_UART
run_current: 0.75
stealthchop_threshold: 0

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - Z board, Fan Pin
heater_pin: PA3
sensor_type: Generic 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 1
min_temp: 0
max_temp: 125
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
# 	Probe
#####################################################################

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_FEBBBE874E5737374D202020FF10320F-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: 24 # update with offset from nozzle on your machine
mesh_main_direction: x
mesh_runs: 2
speed: 30
lift_speed: 30
#z_settling_time: 200

[resonance_tester]
accel_chip: beacon
probe_points: 175, 175, 20
accel_per_hz: 150

#[probe]
#pin: ^can0:PROBE_1
#x_offset: 0
#y_offset: 0
#speed: 10.0
#samples: 2
#samples_result: median
#sample_retract_dist: 2.0
#samples_tolerance: 0.01
#samples_tolerance_retries: 5

#activate_gcode:
#    {% set PROBE_TEMP = 150 %}
#    {% set MAX_TEMP = PROBE_TEMP + 5 %}
#    {% set ACTUAL_TEMP = printer.extruder.temperature %}
#    {% set TARGET_TEMP = printer.extruder.target %}

#    {% if TARGET_TEMP > PROBE_TEMP %}
#        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#        M109 S{ PROBE_TEMP }
#    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
#        {% if ACTUAL_TEMP > MAX_TEMP %}
#            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#        {% endif %}
#    {% endif %}

#####################################################################
# 	Fan Control
#####################################################################

[heater_fan controller_fan]
##	Controller fan - Z board, HE1 Connector
pin: PD12
kick_start_time: 0.5
heater: heater_bed
heater_temp: 15.0
max_power: 1
fan_speed: 0.35
shutdown_speed: 1
#cycle_time: 0.0001

[controller_fan tmc_fan]
pin: PE5
max_power: 1
shutdown_speed: 1
#cycle_time: 0.0001
kick_start_time: 0.5
#enable_pin:
#   See the "fan" section for a description of the above parameters.
fan_speed: 0.35
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver is active.
#   The default is 1.0
#idle_timeout:
#   The amount of time (in seconds) after a stepper driver or heater
#   was active and the fan should be kept running. The default
#   is 30 seconds.
#idle_speed:
#   The fan speed (expressed as a value from 0.0 to 1.0) that the fan
#   will be set to when a heater or stepper driver was active and
#   before the idle_timeout is reached. The default is fan_speed.
#heater:
stepper: stepper_x
#  Name of the config section defining the heater/stepper that this fan
#  is associated with. If a comma separated list of heater/stepper names
#  is provided here, then the fan will be enabled when any of the given
#  heaters/steppers are enabled. The default heater is "extruder", the
#  default stepper is all of them.

#[temperature_fan chamber]
#pin: PA8
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#cycle_time:0.01
#off_below:0.1
#sensor_type: Generic 3950
#sensor_pin: PF4
#min_temp: 0
#max_temp: 100
#target_temp: 35.0
#control: watermark
#gcode_id: C

[heater_generic chamber]
heater_pin: PA8
sensor_type: Generic 3950
sensor_pin: PF4
control: pid
pid_Kp: 61.470837
pid_Ki: 0.5
pid_Kd: 0
pwm_cycle_time: 0.3
min_temp: -273.15
max_temp: 90
max_power: 0.90

[verify_heater chamber]
max_error: 120
check_gain_time: 480
hysteresis: 50
heating_gain: 1

#[heater_fan canbus_fan]
##      Controller fan - Z board, HE1 Connector
#pin: can0:PD3
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 45.0
#max_power: 1
#shutdown_speed: 1

#[temperature_fan canboard_fan]
##      Controller fan - Z board, HE1 Connector
#pin: PD3
#kick_start_time: 0.5
#sensor_type: temperature_mcu
#min_temp: 25.0
#max_temp: 90
#max_power: 1
#fan_speed: 0.35
#shutdown_speed: 1
#control: pid
#pid_Kp: 2.0     ;40
#pid_Ki: 5.0     ;0.2
#pid_Kd: 0.5     ;0.1

#[heater_fan exhaust_fan]
##	Exhaust fan - Z board, HE0 Connector
#pin: z:P2.7
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - Bed Connector (Optional)
#pin: P2.5
#pwm:true
#shutdown_value: 0
#value:100
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[gcode_macro _POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="PrinterTuyaPlug",
                             state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode:
  {% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
    {% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
        {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            _POWER_OFF_PRINTER
        {% else %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
        {% endif %}
    {% else %}
        {% if printer.idle_timeout.state == "Printing" %}
            UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
        {% else %}
            {% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
            {% else %}
                UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
            {% endif %}
        {% endif %}
    {% endif %}
  {% endif %}

[gcode_macro M141]
gcode:
    {% set s = params.S|default(0)|float %}
    SET_TEMPERATURE_FAN_TARGET temperature_fan="chamber" target={s}

[gcode_macro QUAD_GANTRY_SCAN]
gcode:
    QUAD_GANTRY_LEVEL horizontal_move_z=10 retry_tolerance=1.000
    QUAD_GANTRY_LEVEL horizontal_move_z=2

[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
##	Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##	MAX (250, 250), (300,300), or (350,350) depending on your printer size
##	to respective belt positions

#--------------------------------------------------------------------
##	Gantry Corners for 350mm Build
##	Uncomment for 350mm build
gantry_corners:
	-60,-10
	410,420
#	Probe points
points:
	40,50
	40,325
	310,325
	310,50

#--------------------------------------------------------------------
speed: 1000
horizontal_move_z: 10
#horizontal_move_z_fine: 2
#fine_adjustment_threshold: 1
retries: 5
retry_tolerance: 0.0075
max_adjust: 10


[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
# 	Displays
#####################################################################

## 	Uncomment the display that you have. Display connects to Z MCU
#--------------------------------------------------------------------

#[display]
##	RepRapDiscount 128x64 Full Graphic Smart Controller
#lcd_type: st7920
#cs_pin: z:P1.19
#sclk_pin: z:P1.20
#sid_pin: z:P1.18
#menu_timeout: 40
#encoder_pins: ^z:P3.26, ^z:P3.25 
#click_pin: ^!z:P0.28

#[output_pin beeper]
#pin: z:P1.30

#--------------------------------------------------------------------

[delayed_gcode initialize_skip_next_setup]
initial_duration: 1
gcode:
  SET_FILAMENT_SENSOR SENSOR=skip_next_setup ENABLE=0

[filament_switch_sensor skip_next_setup]
switch_pin: !PG11
#any unused pin will do

[filament_switch_sensor runout_sensor]
#pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
#runout_gcode:
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
#insert_gcode:
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.
switch_pin: !PG10
#   The pin on which the switch is connected. This parameter must be
#   provided.


[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_5, ^EXP2_3
click_pin: ^!EXP1_2
contrast: 63

[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: EXP1_6
chain_count: 3
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 1.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

##[verify_heater extruder]
##check_gain_time: 600
#--------------------------------------------------------------------

#####################################################################
# 	Macros
#####################################################################

[gcode_macro TEST_SPEEDv2]
gcode:
    # Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(1)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(30)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}

    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}

    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}

        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED

    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }

    # Home and get position for comparison later:
    G28

    # Absolute positioning
    G90

    # Set new limits
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} MINIMUM_CRUISE_RATIO=1
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel}
    {% endif %}


    # Go to starting position
    G0 X{x_min} Y{y_min} Z{10} F{speed*60}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}

            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}

        # Small pattern
            # Small diagonals
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}

            # Small box
	    {% for i in range(10) %}
		    G0 X{x_center_min} Y{y_center_min} F{speed*60}
		    G0 X{x_center_min} Y{y_center_max} F{speed*60}
		    G0 X{x_center_max} Y{y_center_max} F{speed*60}
		    G0 X{x_center_max} Y{y_center_min} F{speed*60}
	    {% endfor %}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    {% if printer.configfile.settings.printer.minimum_cruise_ratio is defined %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} MINIMUM_CRUISE_RATIO={printer.configfile.settings.printer.minimum_cruise_ratio} 
    {% else %}
        SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}
    {% endif %}

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_SCAN
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern diagonals
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
        
        # Large pattern box
        G0 X{x_min} Y{y_min} F{speed*60}
        G0 X{x_min} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_max} F{speed*60}
        G0 X{x_max} Y{y_min} F{speed*60}
    
        # Small pattern diagonals
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
        
        # Small patternbox
        G0 X{x_center_min} Y{y_center_min} F{speed*60}
        G0 X{x_center_min} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_max} F{speed*60}
        G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        M400 # Finish moves - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/66
        G28 # This is a full G28 to fix an issue with CoreXZ - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/12
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    G28
    QUAD_GANTRY_SCAN
    G28    
#--------------------------------------------------------------------

[homing_override]
axes: xyz
set_position_z: 0
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  SAVE_GCODE_STATE NAME=HOMING
  G0 Z3

  {% if home_all or 'X' in params or 'Y' in params %}
    #M118 LOWER CURRENT
    {% set HOME_CURRENT = 1 %}
    SET_VELOCITY_LIMIT ACCEL=10000
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT=0
    SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT=0
  {% endif %}

  {% if home_all or 'X' in params %}
    #M118 HOME_X
    G28 X
    # Move away
    G91
    G1 X-10 F6000
    #M118 HOME_X DONE
  {% endif %}

  {% if home_all or 'Y' in params %}
    #M118 HOME_Y
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}
    G28 Y
    # Move away
    G91
    G1 Y-10 F6000
    #M118 HOME_Y DONE
  {% endif %}

  {% if home_all or 'X' in params or 'Y' in params %}
    #M118 RAISE CURRENT
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc5160 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc5160 stepper_y'].run_current|float %}
    {% set RUN_CURRENT_X1 = printer.configfile.settings['tmc5160 stepper_x1'].run_current|float %}
    {% set RUN_CURRENT_Y1 = printer.configfile.settings['tmc5160 stepper_y1'].run_current|float %}

    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}
    SET_TMC_CURRENT STEPPER=stepper_x1 CURRENT={RUN_CURRENT_X1}
    SET_TMC_CURRENT STEPPER=stepper_y1 CURRENT={RUN_CURRENT_Y1}
    {% set default_accel = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    SET_VELOCITY_LIMIT ACCEL={default_accel}
  {% endif %}

  {% if home_all or 'Z' in params %}
    G90
    G1 X175 Y175 F48000
    G28 Z
    G0 Z3
  {% endif %}
  RESTORE_GCODE_STATE NAME=HOMING


[gcode_macro TEST_SETUP_SKIP]
gcode:
  {% set skip_next_setup = printer["filament_switch_sensor skip_next_setup"].enabled %}
  {% if skip_next_setup %}
    {action_respond_info("SKIPPING SETUP!")}
    SET_FILAMENT_SENSOR SENSOR=skip_next_setup ENABLE=0
  {% else %}
    {action_respond_info("NOT SKIPPING SETUP!")}
  {% endif %}

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = 5 %}

  {% set skip_next_setup = printer["filament_switch_sensor skip_next_setup"].enabled %}
  {% if skip_next_setup %}
    {action_respond_info("SKIPPING SETUP!")}
    SET_FILAMENT_SENSOR SENSOR=skip_next_setup ENABLE=0
  {% else %}
    {action_respond_info("NOT SKIPPING SETUP!")}
  {% endif %}

  {% if not skip_next_setup %}
    # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
    STATUS_HOMING         # Sets SB-leds to homing-mode
    G28                   # Full home (XYZ)
    G90                   # Absolut position

    ##  Uncomment for bed mesh (1 of 2)
    BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

    # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
    {% if params.BED|int > 90 %}
      SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
      STATUS_HEATING                                      # Sets SB-leds to heating-mode
      M106 S255                                           # Turns on the PT-fan

      ##  Uncomment if you have a Nevermore.
      #SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

      G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
      SET_HEATER_TEMPERATURE HEATER=chamber TARGET={target_chamber}
      M190 S{target_bed}                                  # Sets the target temp for the bed

      # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
    {% else %}
      SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
      STATUS_HEATING                                      # Sets SB-leds to heating-mode
      G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
      M190 S{target_bed}                                  # Sets the target temp for the bed
    {% endif %}

    # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
    #SET_DISPLAY_TEXT MSG="Hotend: 150c"          # Displays info
    #M109 S150                      # Heats the nozzle to 150c

    #  Uncomment for V2 (Quad gantry level AKA QGL)
    SET_DISPLAY_TEXT MSG="QGL"      # Displays info
    STATUS_LEVELING                 # Sets SB-leds to leveling-mode
    QUAD_GANTRY_SCAN                # Levels the buildplate via QGL
    G28 Z                           # Homes Z again after QGL

    ##  Uncomment for bed mesh (2 of 2)
    #SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
    #STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
    bed_mesh_calibrate                 # Starts bed mesh
    #BED_MESH_PROFILE LOAD=default4

    # Heats up the nozzle up to target via data from slicer
    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
    STATUS_HEATING                                                # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
    M107                                                          # Turns off partcooling fan
    M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  {% else %}
    #minimal setup
    M190 S{target_bed}                                            # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
    STATUS_HEATING                                                # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
    M107                                                          # Turns off partcooling fan
    M109 S{target_extruder}                                       # Heats the nozzle to printing temp
  {% endif %}

  # Clean nozzle
  {% if params.CLEAN_NOZZLE|int == 1 %}  
    #clean_nozzle
    STATUS_CLEANING  
  {% endif %}
  # Gets ready to print
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G90                                              # Absolut position
  LINE_PURGE

[gcode_macro PRINT_END]
gcode:
  {% set x_wait = 175 %}
  {% set y_wait = 340 %}

    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0 X{x_wait} Y{y_wait} F3600
    BED_MESH_CLEAR
    #UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[bed_mesh]
speed: 1000
horizontal_move_z: 2
mesh_min: 40, 50
mesh_max: 310,325
fade_start: 0.6
fade_end: 10.0
probe_count: 10,10
algorithm: bicubic
zero_reference_position: 175,175

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
#default_parameter_X: 175    #edit to your park position
#default_parameter_Y: 340    #edit to your park position
#default_parameter_Z: 10     #edit to your park position
#default_parameter_E: 1      #edit to your retract length
gcode:
    {% set X = params.X|default(175) %}
    {% set Y = params.Y|default(340) %} 
    {% set Z = params.Z|default(10) %}
    {% set E = params.X|default(1) %} 
    SAVE_GCODE_STATE NAME=PAUSE_state
    BASE_PAUSE
    G91
    G1 E-{E} F2100
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
#default_parameter_E: 1      #edit to your retract length

gcode:
    {% set E = params.X|default(1) %}
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME


[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    BASE_CANCEL_PRINT

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.886
#*# pid_ki = 1.402
#*# pid_kd = 264.745
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.337
#*# pid_ki = 2.161
#*# pid_kd = 63.009
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.065243, 0.055400, 0.048601, 0.040786
#*# 	0.071722, 0.061743, 0.054127, 0.048279
#*# 	0.060873, 0.050769, 0.042615, 0.030352
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 3
#*# mesh_y_pps = 2
#*# min_y = 50.0
#*# x_count = 4
#*# max_y = 103.7799
#*# mesh_x_pps = 2
#*# max_x = 116.767
#*#
#*# [probe]
#*# z_offset = -0.46
#*#
#*# [beacon model default]
#*# model_coef = 1.68676966579772,
#*# 	  1.960729332784707,
#*# 	  0.6567639264935206,
#*# 	  0.261179100432859,
#*# 	  0.29245735832370684,
#*# 	  0.2786310461190778,
#*# 	  -0.23001972486139938,
#*# 	  -0.199883152861296,
#*# 	  0.19509235181271797,
#*# 	  0.10374408764415091
#*# model_domain = 1.9001186616096721e-07,1.9412584322662135e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 50.594221
#*# model_offset = -0.09500
